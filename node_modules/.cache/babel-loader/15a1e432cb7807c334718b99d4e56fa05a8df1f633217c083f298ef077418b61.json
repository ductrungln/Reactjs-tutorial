{"ast":null,"code":"var _jsxFileName = \"E:\\\\React\\\\my-app\\\\src\\\\component\\\\tictactoe\\\\Game.js\",\n  _s = $RefreshSig$();\nimport React, { useReducer, useState } from 'react';\nimport { calculateWinner } from '../../helper';\nimport Board from './Board';\nimport \"./GameStyles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  // State khởi tạo\n  board: Array(9).fill(null),\n  xIsNext: true\n};\nconst gameReducer = (state, action) => {\n  switch (action.type) {\n    case 'CLICK':\n      {\n        const {\n          board,\n          xIsNext\n        } = state;\n        const {\n          index,\n          winner\n        } = action.payload;\n        if (winner || board[index]) return state;\n        const nextState = JSON.parse(JSON.stringify(state));\n        nextState.board[index] = xIsNext ? \"X\" : \"O\";\n        nextState.xIsNext = !xIsNext;\n        return nextState;\n      }\n    case 'RESET':\n      {\n        const nextState = JSON.parse(JSON.stringify(state));\n        nextState.board = Array(9).fill(null);\n        nextState.xIsNext = true;\n        return nextState;\n      }\n    default:\n      break;\n  }\n  return state;\n};\nconst Game = () => {\n  _s();\n  // const [board,setBoard] = useState(Array(9).fill(null));\n  // const [xIsNext,setXIsNext] = useState(true);\n\n  const [state, dispatch] = useReducer(gameReducer, initialState);\n\n  // const [state,setState] = useState({\n  //         board: Array(9).fill(null),\n  //         xIsNext: true,\n  //     })\n  const winner = calculateWinner(state.board);\n  const handleClick = index => {\n    // const boardCopy = [ ...state.board];\n    // if (winner || boardCopy[index]) return;\n    dispatch({\n      type: 'CLICK',\n      payload: {\n        index,\n        winner\n      }\n    });\n    // boardCopy[index] = state.xIsNext ? \"X\" : \"O\";\n    // console.log(index);\n    // setState({\n    //     ...state,\n    //     board: boardCopy,\n    //     xIsNext: !state.xIsNext,\n    // });\n    // setBoard(boardCopy);\n    // setXIsNext(xIsNext => !xIsNext);\n  };\n\n  const handleResetGame = () => {\n    dispatch({\n      type: 'RESET'\n    });\n    // setState({\n    //     board: Array(9).fill(null),\n    //     xIsNext: true,\n    // })\n    // setBoard(Array(9).fill(null)); \n    // setXIsNext(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Board, {\n      cells: state.board,\n      onClick: handleClick,\n      children: \" \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), winner && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-winner\",\n      children: [\"Winner is \", winner]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"game-reset\",\n      onClick: handleResetGame,\n      children: \"Reset game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n};\n_s(Game, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useReducer","useState","calculateWinner","Board","jsxDEV","_jsxDEV","initialState","board","Array","fill","xIsNext","gameReducer","state","action","type","index","winner","payload","nextState","JSON","parse","stringify","Game","_s","dispatch","handleClick","handleResetGame","children","cells","onClick","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["E:/React/my-app/src/component/tictactoe/Game.js"],"sourcesContent":["import React, { useReducer, useState } from 'react';\r\nimport { calculateWinner } from '../../helper';\r\nimport Board from './Board';\r\nimport \"./GameStyles.css\"\r\n\r\nconst initialState = { // State khởi tạo\r\n    board: Array(9).fill(null),\r\n    xIsNext: true,\r\n}\r\n\r\nconst gameReducer = (state,action) => {\r\n    switch (action.type) {\r\n        case 'CLICK': { \r\n        const{board, xIsNext} = state;\r\n        const{index,winner} = action.payload\r\n        if (winner || board[index]) return state;\r\n        const nextState = JSON.parse(JSON.stringify(state));\r\n        nextState.board[index] = xIsNext ? \"X\" : \"O\"\r\n        nextState.xIsNext = !xIsNext\r\n        return nextState;\r\n        }\r\n        case 'RESET':{\r\n            const nextState = JSON.parse(JSON.stringify(state));\r\n            nextState.board = Array(9).fill(null);\r\n            nextState.xIsNext = true\r\n            return nextState;\r\n        }\r\n        default:\r\n            break;\r\n            \r\n    }\r\n    return state;\r\n}\r\n\r\n\r\nconst Game = () => {\r\n    // const [board,setBoard] = useState(Array(9).fill(null));\r\n    // const [xIsNext,setXIsNext] = useState(true);\r\n\r\n    const [state, dispatch] = useReducer(gameReducer, initialState);\r\n\r\n    // const [state,setState] = useState({\r\n    //         board: Array(9).fill(null),\r\n    //         xIsNext: true,\r\n    //     })\r\n    const winner = calculateWinner(state.board);\r\n    const handleClick = (index) => {\r\n        // const boardCopy = [ ...state.board];\r\n        // if (winner || boardCopy[index]) return;\r\n        dispatch({\r\n            type: 'CLICK',\r\n            payload: {\r\n                index,\r\n                winner,\r\n            }\r\n        })\r\n        // boardCopy[index] = state.xIsNext ? \"X\" : \"O\";\r\n        // console.log(index);\r\n        // setState({\r\n        //     ...state,\r\n        //     board: boardCopy,\r\n        //     xIsNext: !state.xIsNext,\r\n        // });\r\n        // setBoard(boardCopy);\r\n        // setXIsNext(xIsNext => !xIsNext);\r\n    };\r\n    const handleResetGame = ()=>{\r\n        dispatch({\r\n            type: 'RESET',\r\n        })\r\n        // setState({\r\n        //     board: Array(9).fill(null),\r\n        //     xIsNext: true,\r\n        // })\r\n        // setBoard(Array(9).fill(null)); \r\n        // setXIsNext(true);\r\n    }\r\n    return (\r\n        <div>\r\n            <Board cells={state.board} onClick={handleClick}> </Board>\r\n            {winner &&<div className='game-winner'>\r\n                Winner is {winner}\r\n            </div>}\r\n            <button className='game-reset' onClick={handleResetGame}>Reset game</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Game;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}